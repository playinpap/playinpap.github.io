{"version":3,"file":"component---packages-themes-gatsby-theme-flexiblog-minimal-v-2-src-pages-contact-jsx-c628707cb394a7729d61.js","mappings":"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","sources":["webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../node_modules/core-js/internals/a-constructor.js","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../node_modules/core-js/internals/new-promise-capability.js","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../node_modules/core-js/internals/promise-native-constructor.js","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../node_modules/core-js/internals/promise-resolve.js","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../node_modules/core-js/internals/species-constructor.js","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../node_modules/core-js/modules/es.promise.finally.js","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../packages/flow-ui/flow-ui-components/src/PageTitle/PageTitle.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../packages/flow-ui/flow-ui-components/src/ContactForm/ContactForm.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../packages/common/gatsby-common-helpers/src/useForm.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../packages/flow-ui/flow-ui-widgets/src/ContactForm/ContactForm.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../packages/themes/gatsby-theme-flexiblog-minimal-v2/src/pages/contact.jsx"],"sourcesContent":["var isConstructor = require('../internals/is-constructor');\nvar tryToString = require('../internals/try-to-string');\n\nvar $TypeError = TypeError;\n\n// `Assert: IsConstructor(argument) is true`\nmodule.exports = function (argument) {\n  if (isConstructor(argument)) return argument;\n  throw $TypeError(tryToString(argument) + ' is not a constructor');\n};\n","'use strict';\nvar aCallable = require('../internals/a-callable');\n\nvar $TypeError = TypeError;\n\nvar PromiseCapability = function (C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw $TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aCallable(resolve);\n  this.reject = aCallable(reject);\n};\n\n// `NewPromiseCapability` abstract operation\n// https://tc39.es/ecma262/#sec-newpromisecapability\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n","var global = require('../internals/global');\n\nmodule.exports = global.Promise;\n","var anObject = require('../internals/an-object');\nvar isObject = require('../internals/is-object');\nvar newPromiseCapability = require('../internals/new-promise-capability');\n\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n","var anObject = require('../internals/an-object');\nvar aConstructor = require('../internals/a-constructor');\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\n\n// `SpeciesConstructor` abstract operation\n// https://tc39.es/ecma262/#sec-speciesconstructor\nmodule.exports = function (O, defaultConstructor) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || isNullOrUndefined(S = anObject(C)[SPECIES]) ? defaultConstructor : aConstructor(S);\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar NativePromiseConstructor = require('../internals/promise-native-constructor');\nvar fails = require('../internals/fails');\nvar getBuiltIn = require('../internals/get-built-in');\nvar isCallable = require('../internals/is-callable');\nvar speciesConstructor = require('../internals/species-constructor');\nvar promiseResolve = require('../internals/promise-resolve');\nvar defineBuiltIn = require('../internals/define-built-in');\n\nvar NativePromisePrototype = NativePromiseConstructor && NativePromiseConstructor.prototype;\n\n// Safari bug https://bugs.webkit.org/show_bug.cgi?id=200829\nvar NON_GENERIC = !!NativePromiseConstructor && fails(function () {\n  // eslint-disable-next-line unicorn/no-thenable -- required for testing\n  NativePromisePrototype['finally'].call({ then: function () { /* empty */ } }, function () { /* empty */ });\n});\n\n// `Promise.prototype.finally` method\n// https://tc39.es/ecma262/#sec-promise.prototype.finally\n$({ target: 'Promise', proto: true, real: true, forced: NON_GENERIC }, {\n  'finally': function (onFinally) {\n    var C = speciesConstructor(this, getBuiltIn('Promise'));\n    var isFunction = isCallable(onFinally);\n    return this.then(\n      isFunction ? function (x) {\n        return promiseResolve(C, onFinally()).then(function () { return x; });\n      } : onFinally,\n      isFunction ? function (e) {\n        return promiseResolve(C, onFinally()).then(function () { throw e; });\n      } : onFinally\n    );\n  }\n});\n\n// makes sure that native promise-based APIs `Promise#finally` properly works with patched `Promise#then`\nif (!IS_PURE && isCallable(NativePromiseConstructor)) {\n  var method = getBuiltIn('Promise').prototype['finally'];\n  if (NativePromisePrototype['finally'] !== method) {\n    defineBuiltIn(NativePromisePrototype, 'finally', method, { unsafe: true });\n  }\n}\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Heading, Text, Badge } from 'theme-ui'\r\n\r\nconst styles = {\r\n  count: {\r\n    fontSize: 4\r\n  },\r\n  subheader: {\r\n    fontWeight: `body`,\r\n    color: `omegaDark`\r\n  },\r\n  runninghead: {\r\n    fontWeight: `body`,\r\n    color: `omegaDark`,\r\n    mb: 0\r\n  }\r\n}\r\n\r\nconst PageTitle = ({ header, subheader, running, totalCount }) => {\r\n  return (\r\n    <div>\r\n      <Heading variant='h1' as='h1'>\r\n        {header}{' '}\r\n        {totalCount && (\r\n          <Badge variant='tag-white' sx={styles.count}>\r\n            {' '}\r\n            {totalCount}\r\n          </Badge>\r\n        )}\r\n      </Heading>\r\n      {subheader && (\r\n        <Text variant='h3' sx={styles.subheader}>\r\n          {subheader}\r\n        </Text>\r\n      )}\r\n      {running && (\r\n        <Text variant='h4' sx={styles.runninghead}>\r\n          {running}\r\n        </Text>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PageTitle\r\n\r\nPageTitle.propTypes = {\r\n  title: PropTypes.string,\r\n  subheader: PropTypes.string,\r\n  running: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n  totalCount: PropTypes.number\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Box, Label, Input, Textarea, Button, Message, Spinner } from 'theme-ui'\r\n\r\n/**\r\n * How to enable form integration:\r\n *\r\n * 1) Shadow this component\r\n * 2) Remove the demo attribute from the form tag.\r\n * 3) Add your action end-point to the form tag.\r\n * 4) If required by your form API provider, add the hidden input(s).\r\n *\r\n * Some recommended serverless form providers:\r\n * Getform (https://www.gatsbyjs.com/docs/building-a-contact-form/#getform)\r\n * Formspree (https://www.gatsbyjs.com/docs/building-a-contact-form/#formspree)\r\n * Netlify Form (https://www.gatsbyjs.com/docs/building-a-contact-form/#netlify)\r\n *\r\n */\r\n\r\nconst ContactForm = ({ handleSubmit, submitting, success }) => (\r\n  <form\r\n    onSubmit={handleSubmit}\r\n    method='POST'\r\n    action='YOUR_ACTION_END_POINT'\r\n    demo='demo'\r\n  >\r\n    {success === true && (\r\n      <Message variant='success'>\r\n        Thank you for contacting us. We'll get back to you soon!\r\n      </Message>\r\n    )}\r\n    {success === false && (\r\n      <Message variant='error'>\r\n        Something went wrong. Please try again later!\r\n      </Message>\r\n    )}\r\n    <Box variant='forms.row'>\r\n      <Box variant='forms.column'>\r\n        <Label htmlFor='contact-form-name'>Name</Label>\r\n        <Input type='text' id='contact-form-name' name='name' required />\r\n      </Box>\r\n      <Box variant='forms.column'>\r\n        <Label htmlFor='contact-form-company'>Company Name</Label>\r\n        <Input type='text' id='contact-form-company' name='company' />\r\n      </Box>\r\n    </Box>\r\n    <Box variant='forms.row'>\r\n      <Box variant='forms.column'>\r\n        <Label htmlFor='contact-form-email'>Email</Label>\r\n        <Input\r\n          type='email'\r\n          placeholder='email@example.com'\r\n          id='contact-form-email'\r\n          name='email'\r\n          required\r\n        />\r\n      </Box>\r\n      <Box variant='forms.column'>\r\n        <Label htmlFor='contact-form-phone'>Phone Number</Label>\r\n        <Input\r\n          type='tel'\r\n          placeholder='(xxx) xxx-xxxx'\r\n          id='contact-form-phone'\r\n          name='phone'\r\n        />\r\n      </Box>\r\n    </Box>\r\n    <Box variant='forms.row'>\r\n      <Label htmlFor='contact-form-subject'>Subject</Label>\r\n      <Input type='text' id='contact-form-subject' name='subject' required />\r\n    </Box>\r\n    <Box variant='forms.row'>\r\n      <Label htmlFor='contact-form-message'>Your Message</Label>\r\n      <Textarea name='message' id='contact-form-message' />\r\n    </Box>\r\n    <Button\r\n      variant={success || submitting ? 'disabled' : 'primary'}\r\n      disabled={success || submitting}\r\n      type='submit'\r\n      required\r\n    >\r\n      Submit {submitting && <Spinner size='20' />}\r\n    </Button>\r\n  </form>\r\n)\r\n\r\nexport default ContactForm\r\n\r\nContactForm.propTypes = {\r\n  handleSubmit: PropTypes.func,\r\n  submitting: PropTypes.bool,\r\n  success: PropTypes.bool\r\n}\r\n","import { useState, useEffect, useCallback } from 'react'\r\n\r\nconst useForm = () => {\r\n  const [submitting, setSubmitting] = useState(false)\r\n  const [target, setTarget] = useState({})\r\n  const [success, setSuccess] = useState()\r\n  const [values, setValues] = useState()\r\n  const [action, setAction] = useState()\r\n\r\n  const handleSubmit = (e, { values, action } = {}) => {\r\n    e.preventDefault()\r\n    if (values) setValues(values)\r\n    if (action) setAction(action)\r\n    setTarget(e.target)\r\n    setSubmitting(true)\r\n  }\r\n\r\n  const sendValues = useCallback(() => {\r\n    const form = new FormData(target)\r\n    const formData = new URLSearchParams(values || form).toString()\r\n    const isDemo = target.getAttribute('demo')\r\n\r\n    // Mimicking form submission for demos\r\n    if (isDemo) {\r\n      setTimeout(() => {\r\n        setSuccess(true)\r\n        setSubmitting(false)\r\n      }, 1500)\r\n      return\r\n    }\r\n\r\n    // Real form submission\r\n    fetch(action || target.action, {\r\n      method: target.method || 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n        Accept: 'application/json'\r\n      },\r\n      body: formData\r\n    })\r\n      .then(() => {\r\n        target.reset()\r\n        setSuccess(true)\r\n      })\r\n      .catch(error => {\r\n        setSuccess(false)\r\n      })\r\n      .finally(() => {\r\n        setSubmitting(false)\r\n      })\r\n  }, [target])\r\n\r\n  useEffect(() => {\r\n    if (submitting) {\r\n      sendValues()\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [submitting, sendValues])\r\n\r\n  const reset = useCallback(() => {\r\n    setSubmitting(false)\r\n    setSuccess(undefined)\r\n    setValues(undefined)\r\n    setAction(undefined)\r\n  }, [])\r\n\r\n  return {\r\n    handleSubmit,\r\n    submitting,\r\n    success,\r\n    reset\r\n  }\r\n}\r\n\r\nexport default useForm\r\n","import React from 'react'\r\nimport { Card } from 'theme-ui'\r\nimport ContactFormComponent from '@components/ContactForm'\r\nimport useForm from '@helpers/useForm'\r\n\r\nconst ContactForm = () => {\r\n  const { handleSubmit, submitting, success } = useForm()\r\n\r\n  return (\r\n    <Card variant='paper'>\r\n      <ContactFormComponent {...{ handleSubmit, submitting, success }} />\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default ContactForm\r\n","import React from 'react'\r\nimport { Layout, Stack, Main } from '@layout'\r\nimport PageTitle from '@components/PageTitle'\r\nimport Divider from '@components/Divider'\r\nimport Seo from '@widgets/Seo'\r\nimport ContactForm from '@widgets/ContactForm'\r\n\r\nexport default props => (\r\n  <Layout {...props}>\r\n    <Seo title='Contact' />\r\n    <Divider />\r\n    <Stack>\r\n      <Main>\r\n        <PageTitle\r\n          header=\"Let's Connect\"\r\n          subheader='FlexiBlog theme comes with a pre-made contact form component.\r\n\t\t\t\t\tYou can integrate this form with serverless services such as Formspree, Getform,\r\n\t\t\t\t\tFormKeep and others to receive form submissions via email.'\r\n        />\r\n        <Divider />\r\n        <ContactForm />\r\n      </Main>\r\n    </Stack>\r\n  </Layout>\r\n)\r\n"],"names":["isConstructor","tryToString","$TypeError","TypeError","module","exports","argument","aCallable","PromiseCapability","C","resolve","reject","this","promise","$$resolve","$$reject","undefined","f","global","Promise","anObject","isObject","newPromiseCapability","x","constructor","promiseCapability","aConstructor","isNullOrUndefined","SPECIES","wellKnownSymbol","O","defaultConstructor","S","$","IS_PURE","NativePromiseConstructor","fails","getBuiltIn","isCallable","speciesConstructor","promiseResolve","defineBuiltIn","NativePromisePrototype","prototype","target","proto","real","forced","call","then","onFinally","isFunction","e","method","unsafe","styles","count","fontSize","subheader","fontWeight","color","runninghead","mb","_ref","header","running","totalCount","___EmotionJSX","Heading","variant","as","Badge","sx","Text","handleSubmit","submitting","success","onSubmit","action","demo","Message","Box","Label","htmlFor","Input","type","id","name","required","placeholder","Textarea","Button","disabled","Spinner","size","_useState","useState","setSubmitting","_useState2","setTarget","_useState3","setSuccess","_useState4","values","setValues","_useState5","setAction","sendValues","useCallback","form","FormData","formData","URLSearchParams","toString","getAttribute","setTimeout","fetch","headers","Accept","body","reset","catch","error","finally","useEffect","_temp","preventDefault","_useForm","useForm","Card","ContactFormComponent","props","Layout","Seo","title","Divider","Stack","Main","PageTitle","ContactForm"],"sourceRoot":""}